{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTN,EACII,EAAQ,CAAEN,WAAUC,UACpBM,EAAO,CAAEP,WAAUC,S,GACtBA,E,IAVSQ,SAASC,cAAc,SAc/BC,iBAAiB,UAEzB,SAA8BC,GAC5BA,EAAMC,iBAKN,IAJA,IAAMC,EAASC,OAAOC,KAAKC,SAASH,OAAOI,OACrCC,EAAOJ,OAAOC,KAAKC,SAASE,KAAKD,OACnCE,EAAQL,OAAOC,KAAKC,SAAShB,MAAMiB,OAE9BG,EAAI,EAAGA,GAAKP,EAAQO,GAAK,EAChCtB,EAAcsB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjDmB,GAASD,EAEXP,EAAMkB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      shouldResolve\n        ? resolve({ position, delay })\n        : reject({ position, delay });\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', onStartPromiseCreate);\n\nfunction onStartPromiseCreate(event) {\n  event.preventDefault();\n  const amount = Number(form.elements.amount.value);\n  const step = Number(form.elements.step.value);\n  let delay = Number(form.elements.delay.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  event.target.reset();\n}\n\n// ==========================start=============================================================\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","amount","Number","form","elements","value","step","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","target","reset"],"version":3,"file":"03-promises.127c8637.js.map"}